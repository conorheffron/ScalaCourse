object Collections {
  
	val arr = Array(1,2,3)                    //> arr  : Array[Int] = Array(1, 2, 3)
	
	val lst = List(7.5,2,4,9)                 //> lst  : List[Double] = List(7.5, 2.0, 4.0, 9.0)
	
	arr(0)                                    //> res0: Int = 1
	
	lst(2)                                    //> res1: Double = 4.0
	
	// replace item in array
	arr(0) = 99
	
	arr                                       //> res2: Array[Int] = Array(99, 2, 3)
	
	// new list with 1 prepend to lst
	val lst2 = 11 :: lst                      //> lst2  : List[AnyVal] = List(11, 7.5, 2.0, 4.0, 9.0)
	
	lst                                       //> res3: List[Double] = List(7.5, 2.0, 4.0, 9.0)
	
	var arr2 = Array.fill(100)(math.random)   //> arr2  : Array[Double] = Array(0.9284969337376926, 0.9324520843897498, 0.1776
                                                  //| 7835369114526, 0.12560166581589172, 0.03781225922412201, 0.17409046674354445
                                                  //| , 0.808185363420549, 0.28397202773102015, 0.07924594214468528, 0.75702115503
                                                  //| 26754, 0.004175535246253026, 0.6650609787046697, 0.6131978250787334, 0.88736
                                                  //| 28014384667, 0.9350873321434494, 0.30423897824279766, 0.09233708154804765, 0
                                                  //| .26092225244656553, 0.928004497105681, 0.9221603998677422, 0.108259512042623
                                                  //| 74, 0.8423513192128012, 0.8581184177490216, 0.9443172280695933, 0.4398922220
                                                  //| 731045, 0.3009170426068578, 0.4137679268189348, 0.26968983765325505, 0.44505
                                                  //| 78923167966, 0.9668072576879875, 0.5885041605138652, 0.061108041114164346, 0
                                                  //| .31024377706011563, 0.9033392488098412, 0.05438578076448208, 0.0145063733229
                                                  //| 88542, 0.553503817842126, 0.5781338131462096, 0.7787176454302797, 0.40507785
                                                  //| 28225816, 0.9615540910357241, 0.6602633358268601, 0.36070406060988003, 0.705
                                                  //| 400409154138, 0.83450555
                                                  //| Output exceeds cutoff limit.
	
	//def littleArray(i:Int):Array[Int] = Array(i,i,i)
	def littleArray(i: => Int):Array[Int] = Array(i,i,i)
                                                  //> littleArray: (i: => Int)Array[Int]
	
	littleArray(util.Random.nextInt(10))      //> res4: Array[Int] = Array(3, 5, 3)
	
	// square each items position for item value
	val arr3 = Array.tabulate(10)(i => i*i)   //> arr3  : Array[Int] = Array(0, 1, 4, 9, 16, 25, 36, 49, 64, 81)
	

}